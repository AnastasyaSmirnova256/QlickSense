main

SET ThousandSep=' ';
SET DecimalSep=',';
SET MoneyThousandSep=' ';
SET MoneyDecimalSep=',';
SET MoneyFormat='# ##0,00 ₽;-# ##0,00 ₽';
SET TimeFormat='h:mm:ss';
SET DateFormat='DD.MM.YYYY';
SET TimestampFormat='DD.MM.YYYY h:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='ru-RU';
SET CreateSearchIndexOnReload=1;
SET MonthNames='янв.;февр.;мар.;апр.;мая;июн.;июл.;авг.;сент.;окт.;нояб.;дек.';
SET LongMonthNames='январь;февраль;март;апрель;май;июнь;июль;август;сентябрь;октябрь;ноябрь;декабрь';
SET DayNames='пн;вт;ср;чт;пт;сб;вс';
SET LongDayNames='понедельник;вторник;среда;четверг;пятница;суббота;воскресенье';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';
SET Season= 'зима;весна;лето;осень';


LIB CONNECT TO 'Data (qlik_qvservice)';

/*
rem // закомментир до след функции
//first comment
*/

Quarter:
mapping Load 
RowNo() as month,
'Q' &' '& ceil(RowNo()/3) as quarter
AutoGenerate(12);



Справочники

Shippers:
Mapping LOAD
	ShipperID,
    CompanyName as ShippersCompName;
SQL SELECT ShipperID,
    CompanyName
FROM "C:\Datasources\QWT".Shippers;

Categories:
LOAD
	CategoryID,
    CategoryName,
    Description;
SQL SELECT CategoryID,
    CategoryName,
    Description
FROM "C:\Datasources\QWT".Categories;

Divisions:
Mapping LOAD
	DivisionID,
    DivisionName;
SQL SELECT DivisionID,
    DivisionName
FROM "C:\Datasources\QWT".Divisions;


Shipments:
Mapping LOAD
    AutoNumber(OrderID &'_'& LineNo) as OrderKey,
    //ShipperID,
    //CustomerID,
    //ProductID,
   // EmployeeID,
    ShipmentDate;
SQL SELECT OrderID,
    LineNo,
    ShipperID,
    CustomerID,
    ProductID,
    EmployeeID,
    ShipmentDate
FROM "C:\Datasources\QWT".Shipments;


Продукты

Products:
LOAD ProductID,
  ProductName,
  SupplierID, //
  CategoryID,
  //QuantityPerUnit,
  UnitCost, //себестоимость
  UnitPrice, //стоимость за единицу товара
  UnitsInStock,
  UnitsOnOrder; //ненужное поле
SQL SELECT ProductID,
  ProductName,
  SupplierID,
  CategoryID,
  QuantityPerUnit,
  UnitCost,
  UnitPrice,
  UnitsInStock,
  UnitsOnOrder
FROM "C:\Datasources\QWT".Products;
​
Unitcost:
Mapping Load
  ProductID,
  UnitCost
Resident Products;


Заказы

Orders:
LOAD
	OrderID,
    OrderDate,
    year(OrderDate) as Year,
    month(OrderDate) as Month,
    day(OrderDate) as Day,
    //QuarterName(OrderDate) as season,
    ApplyMap('Quarter',num(month(OrderDate)),'No month') as Quarter,
    CustomerID,
    EmployeeID, //сотрудник
    EmployeeID as SalesEmployeeId, //специальное поле для фиксирования продавца
    ShipperID, 	//отгрузка
    ApplyMap('Shippers',ShipperID,'nothing') as ShippersName, //то поле, которое подходит в ЭТОЙ таблице (ShipperID)
    Freight; 	//вес груза
SQL SELECT OrderID,
    OrderDate,
    CustomerID,
    EmployeeID,
    ShipperID,
    Freight
FROM "C:\Datasources\QWT".Orders;


Order_Details: // чтобы был пробел в названии, тк считает, что название - одно слово
// load*,
// Margin/LineSalesAmount as Margin% ;

Load
	OrderID,
    LineNo,
	AutoNumber(OrderID &'_'& LineNo) as OrderKey,
    ProductID,
    ApplyMap('Unitcost',ProductID,Null()) * Quantity as LineUnitCost,
    ((UnitPrice*Quantity*(1-Discount)) - (ApplyMap('Unitcost',ProductID,Null()) * Quantity)) as Margin,
    Quantity,
    UnitPrice*Quantity*(1-Discount) as LineSalesAmount, //Цена продажи конкретной позиции в конкретном чеке с учетом количества и скидки
    Discount,
    ApplyMap('Shipments',AutoNumber(OrderID &'_'& LineNo),'nothing') as ShipmentDate;
    
SQL SELECT OrderID,
    LineNo,		 //позиция
    ProductID,	//
    Quantity,	 // количество
    UnitPrice,	//цена продажи
    Discount	//Скидка
FROM "C:\Datasources\QWT"."Order Details";


left join(Orders)
MaxPosition:
Load
	OrderID,
    sum(Margin/LineSalesAmount) as Margin%,
	count(LineNo) as maxPOsitions
Resident Order_Details
Group By OrderID;


Customers


Customers:
LOAD
	CustomerID,
    CompanyName as CustCompanyName,
    ContactName,
    City,
    Country,
    DivisionID,
    ApplyMap('Divisions',DivisionID,'No') as DivisionName,
    Address,
    Fax,
    Phone,
    PostalCode,
    StateProvince;
SQL SELECT CustomerID,
    CompanyName,
    ContactName,
    City,
    Country,
    DivisionID,
    Address,
    Fax,
    Phone,
    PostalCode,
    StateProvince
FROM "C:\Datasources\QWT".Customers;


Сотрудники

Employee:
LOAD
  EmpID as EmployeeID,
  "Last Name",
  "First Name",
  Title,
  "Hire Date", 
  Office,
  "Extension",
  "Reports To",
  "Year Salary"
FROM [lib://Developer_data (qlik_qvservice)/EmpOff.xls]
(biff, embedded labels, table is Employee$);


SalesPerson:
LOAD 
  EmployeeID,
  [Last Name]&'.'&[First Name] as SalesName,
  Title as SalesTitle
Resident Employee //обращаемся к данным, которые уже есть в памяти
Where Exists(SalesEmployeeId,EmployeeID);
//Where Title like 'Sales*' or Title = 'President';


Office:
LOAD
  Office,
  OfficeAddress,
  OfficePostalCode,
  OfficeCity,
  OfficeStateProvince,
  OfficePhone,
  OfficeFax,
  OfficeCountry
FROM [lib://Developer_data (qlik_qvservice)/EmpOff.xls]
(biff, embedded labels, table is Office$);

drop Fields SalesEmployeeId; //после ипользования выкидываем из памяти
